generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String
}

model Usuario {
  id               Int               @id @default(autoincrement())
  nome             String
  email            String            @unique
  senha            String
  role             Role
  avaliacoes       Avaliacao[]
  estabelecimentos Estabelecimento[] @relation("UsuarioEstabelecimentos")
  pedidos          Pedido[]          @relation("ClientePedidos")
}

model Estabelecimento {
  id              Int         @id @default(autoincrement())
  nome            String
  descricao       String
  endereco        String
  donoId          Int
  avaliacao       Float       @default(0)
  avaliacoesCount Int         @default(0)
  avaliacoes      Avaliacao[]
  dono            Usuario     @relation("UsuarioEstabelecimentos", fields: [donoId], references: [id])
  pedidos         Pedido[]
  produtos        Produto[]
  tempoEntregaMin   Int      @default(30)
  tempoEntregaMax   Int      @default(50)
  taxaEntrega       Float    @default(5.0)
  categorias      Categoria[] @relation("EstabelecimentoCategorias")
}

model Produto {
  id                Int             @id @default(autoincrement())
  nome              String
  descricao         String
  preco             Float
  estabelecimentoId Int
  itensPedido       ItemPedido[]
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
  categorias        Categoria[]     @relation("ProdutoCategorias")
}

model Pedido {
  id                Int             @id @default(autoincrement())
  clienteId         Int
  estabelecimentoId Int
  status            Status
  createdAt         DateTime        @default(now())
  itens             ItemPedido[]
  cliente           Usuario         @relation("ClientePedidos", fields: [clienteId], references: [id])
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
}

model ItemPedido {
  id            Int     @id @default(autoincrement())
  pedidoId      Int
  produtoId     Int
  quantidade    Int
  precoUnitario Float
  pedido        Pedido  @relation(fields: [pedidoId], references: [id])
  produto       Produto @relation(fields: [produtoId], references: [id])
}

model Avaliacao {
  id                Int             @id @default(autoincrement())
  estabelecimentoId Int
  usuarioId         Int
  nota              Int
  comentario        String?
  createdAt         DateTime        @default(now())
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [id])
  usuario           Usuario         @relation(fields: [usuarioId], references: [id])
}

model Categoria {
  id                Int             @id @default(autoincrement())
  nome              String          @unique
  estabelecimentos   Estabelecimento[] @relation("EstabelecimentoCategorias")
  produtos          Produto[]       @relation("ProdutoCategorias")
}

enum Role {
  cliente
  dono
  admin
}

enum Status {
  pendente
  preparo
  entregue
  cancelado
}
